version: "3.9"
services:
  redis:
      image: redis:6.2-alpine
      restart: always
#       ports:
#         - '6379:6379'
      command: redis-server --save 20 1
      volumes: 
        - redis-vol:/data
      networks:
        - plasir-network
  db:
    image: postgres
    volumes:
      - plasir-db:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: parham
    networks:
      - plasir-network
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
          
  web:
    image: parhamash/plasir-inventory
    command: bash -c "rm -f tmp/pids/server.pid && bundle exec rails db:create db:migrate && bundle exec rails assets:precompile && bundle exec rails s -p 3000 -b '0.0.0.0'"
    volumes:
      - nas-vol-2:/app/nas
#       - ./inventory:/app
    ports:
      - "3000:3000"
    depends_on:
      - db
    environment:
#       - RAILS_ENV=production
      - SECRET_KEY_BASE=${SECRET_KEY_BASE}
      - APP_DATABASE_PASSWORD=${APP_DATABASE_PASSWORD}
      - NAS_ADDRESS=${NAS_ADDRESS}
      - NAS_USERNAME=${NAS_USERNAME}
      - NAS_PASSWORD=${NAS_PASSWORD}
#       - redis
    networks:
      - traefik-public
      - plasir-network
    deploy:
      replicas: 1
      labels:
        - traefik.frontend.rule=Host:plasir.playground.dv
        - traefik.enable=true
        - traefik.port=3000
        - traefik.tags=traefik-public
        - traefik.docker.network=traefik-public
        # Traefik service that listens to HTTP
        - traefik.redirectorservice.frontend.entryPoints=http
        - traefik.redirectorservice.frontend.redirect.entryPoint=https
        # Traefik service that listens to HTTPS
        - traefik.webservice.frontend.entryPoints=https 
      placement:
        constraints:
          - node.role == manager
          
  producer:
    image: parhamash/plasir-shoe-store
    command: sh -c "/app/bin/websocketd --port=8080 ruby inventory.rb" # -e ${RAILS_ENV}
      # - sidekiq
    # restart: always
#     ports:
#       - "8080:8080"
#     volumes:
#       - ./shoe-store:/app
    networks:
      - plasir-network
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
          
  consumer:
    image: parhamash/plasir-shoe-store-consumer
    command: sh -c "ruby consumer.rb" # -e ${RAILS_ENV}
      # - sidekiq
    # restart: always
    # ports:
    #   - "8080:8080"
#     volumes:
#       - ./shoe-store-consumer:/app
    depends_on:
      - producer
      - web
    networks:
      - plasir-network
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager

volumes:
  plasir-db:
  redis-vol:
  nas-vol-2:
    driver_opts:
      type: cifs
      device: ${NAS_ADDRESS_2}
      o: "username=${NAS_USER},password=${NAS_PASSWORD}"
#   nas-vol:
#     driver_opts:
#       type: cifs
#       o: "username=${NAS_USER},password=${NAS_PASSWORD}"
#       device: "test"

networks:
  traefik-public:
    driver: overlay
    external: true
  plasir-network:
